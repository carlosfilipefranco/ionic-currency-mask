{"version":3,"file":"thiagoprz-ionic-currency-mask.umd.js","sources":["../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.directive.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.module.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/public-api.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/thiagoprz-ionic-currency-mask.ts"],"sourcesContent":["import {Attribute, Directive} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[currencyMask]',\n  host: {\n    '(keyup)': 'changeValue($event)',\n    '(ionChange)': 'changeValue($event)',\n  },\n  providers: [NgModel]\n})\nexport class CurrencyMaskDirective {\n\n  /**\n   * Decimal separator (defaults to \",\")\n   */\n  decimal: string = ',';\n\n  /**\n   * Thousand separator (defaults to \".\")\n   */\n  thousand: string = '.';\n\n  /**\n   * Construtor\n   * @param {NgModel} model\n   */\n  constructor(public model: NgModel,\n              @Attribute('decimal') decimal: string,\n              @Attribute('thousand') thousand: string) {\n    if (decimal) {\n      this.decimal = decimal;\n    }\n    if (thousand) {\n      this.thousand = thousand;\n    }\n  }\n\n  /**\n   * Listener changeValue\n   * @param event\n   */\n  changeValue(event: any) {\n    let value = event.target.value;\n    if (value == '') {\n      return;\n    }\n    value = value + '';\n    value = parseInt(value.replace(/[\\D]+/g, ''));\n    value = value + '';\n    value = value.replace(/([0-9]{2})$/g, this.decimal + '$1');\n    var parts = value.toString().split(this.decimal);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousand);\n    value = parts.join(this.decimal);\n    console.log(value);\n    event.target.value = value;\n    this.model.update.emit(value);\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {CurrencyMaskDirective} from \"./ionic-currency-mask.directive\";\n\n\n\n@NgModule({\n  declarations: [CurrencyMaskDirective],\n  imports: [\n  ],\n  exports: [CurrencyMaskDirective]\n})\nexport class IonicCurrencyMaskModule { }\n","/*\n * Public API Surface of ionic-currency-mask\n */\n\nexport * from './lib/ionic-currency-mask.directive';\nexport * from './lib/ionic-currency-mask.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Directive","NgModel","Attribute","NgModule"],"mappings":";;;;;;;;;;;QA2BE,+BAAmB,KAAc,EACC,OAAe,EACd,QAAgB;YAFhC,UAAK,GAAL,KAAK,CAAS;;;;YAXjC,YAAO,GAAW,GAAG,CAAC;;;;YAKtB,aAAQ,GAAW,GAAG,CAAC;YASrB,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB;YACD,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B;SACF;;;;;QAMD,2CAAW,GAAX,UAAY,KAAU;YACpB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAC/B,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,OAAO;aACR;YACD,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;YACnB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YAC9C,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;YACnB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAC3D,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjD,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpE,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,OAAO,IAAI,CAAC;SACb;;;;gBAvDFA,cAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,IAAI,EAAE;wBACJ,SAAS,EAAE,qBAAqB;wBAChC,aAAa,EAAE,qBAAqB;qBACrC;oBACD,SAAS,EAAE,CAACC,aAAO,CAAC;iBACrB;;;gBATOA,aAAO;6CA2BAC,cAAS,SAAC,SAAS;6CACnBA,cAAS,SAAC,UAAU;;;;QClBnC;;;;;gBANCC,aAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,EACR;oBACD,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC;;;ICVD;;;;ICAA;;;;;;;;;;;;;"}