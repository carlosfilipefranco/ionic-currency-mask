{"version":3,"sources":["../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.directive.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.module.ts"],"names":["CurrencyMaskDirective","model","decimal","thousand","this","prototype","changeValue","event","value","target","parseInt","replace","parts","toString","split","join","console","log","update","emit","Directive","args","selector","host","(keyup)","(ionChange)","providers","NgModel","Attribute","NgModule","declarations","imports","exports"],"mappings":"qcA2BE,SAAAA,EAAmBC,EACeC,EACCC,GAFhBC,KAAAH,MAAAA,EAXnBG,KAAAF,QAAkB,IAKlBE,KAAAD,SAAmB,IASbD,IACFE,KAAKF,QAAUA,GAEbC,IACFC,KAAKD,SAAWA,UAQpBH,EAAAK,UAAAC,YAAA,SAAYC,GACV,IAAIC,EAAQD,EAAME,OAAOD,MACzB,GAAa,IAATA,EAAJ,CAGAA,GAAgB,GAChBA,EAAQE,SAASF,EAAMG,QAAQ,SAAU,KAGzC,IAAIC,GADJJ,GADAA,GAAgB,IACFG,QAAQ,eAAgBP,KAAKF,QAAU,OACnCW,WAAWC,MAAMV,KAAKF,SAMxC,OALAU,EAAM,GAAKA,EAAM,GAAGD,QAAQ,wBAAyBP,KAAKD,UAC1DK,EAAQI,EAAMG,KAAKX,KAAKF,SACxBc,QAAQC,IAAIT,GACZD,EAAME,OAAOD,MAAQA,EACrBJ,KAAKH,MAAMiB,OAAOC,KAAKX,IAChB,6BAtDVY,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,KAAM,CACJC,UAAW,sBACXC,cAAe,uBAEjBC,UAAW,CAACC,EAAAA,sDARNA,EAAAA,wCA2BOC,EAAAA,UAASP,KAAA,CAAC,6CACVO,EAAAA,UAASP,KAAA,CAAC,uBClBzB,iCANCQ,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CAAC9B,GACf+B,QAAS,GAETC,QAAS,CAAChC","sourcesContent":["import {Attribute, Directive} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[currencyMask]',\n  host: {\n    '(keyup)': 'changeValue($event)',\n    '(ionChange)': 'changeValue($event)',\n  },\n  providers: [NgModel]\n})\nexport class CurrencyMaskDirective {\n\n  /**\n   * Decimal separator (defaults to \",\")\n   */\n  decimal: string = ',';\n\n  /**\n   * Thousand separator (defaults to \".\")\n   */\n  thousand: string = '.';\n\n  /**\n   * Construtor\n   * @param {NgModel} model\n   */\n  constructor(public model: NgModel,\n              @Attribute('decimal') decimal: string,\n              @Attribute('thousand') thousand: string) {\n    if (decimal) {\n      this.decimal = decimal;\n    }\n    if (thousand) {\n      this.thousand = thousand;\n    }\n  }\n\n  /**\n   * Listener changeValue\n   * @param event\n   */\n  changeValue(event: any) {\n    let value = event.target.value;\n    if (value == '') {\n      return;\n    }\n    value = value + '';\n    value = parseInt(value.replace(/[\\D]+/g, ''));\n    value = value + '';\n    value = value.replace(/([0-9]{2})$/g, this.decimal + '$1');\n    var parts = value.toString().split(this.decimal);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousand);\n    value = parts.join(this.decimal);\n    console.log(value);\n    event.target.value = value;\n    this.model.update.emit(value);\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {CurrencyMaskDirective} from \"./ionic-currency-mask.directive\";\n\n\n\n@NgModule({\n  declarations: [CurrencyMaskDirective],\n  imports: [\n  ],\n  exports: [CurrencyMaskDirective]\n})\nexport class IonicCurrencyMaskModule { }\n"]}