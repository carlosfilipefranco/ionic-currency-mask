{"version":3,"file":"thiagoprz-ionic-currency-mask.js","sources":["../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.directive.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/lib/ionic-currency-mask.module.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/public-api.ts","../../../../projects/thiagoprz/ionic-currency-mask/src/thiagoprz-ionic-currency-mask.ts"],"sourcesContent":["import {Attribute, Directive} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[currencyMask]',\n  host: {\n    '(keyup)': 'changeValue($event)',\n    '(ionChange)': 'changeValue($event)',\n  },\n  providers: [NgModel]\n})\nexport class CurrencyMaskDirective {\n\n  /**\n   * Decimal separator (defaults to \",\")\n   */\n  decimal: string = ',';\n\n  /**\n   * Thousand separator (defaults to \".\")\n   */\n  thousand: string = '.';\n\n  /**\n   * Construtor\n   * @param {NgModel} model\n   */\n  constructor(public model: NgModel,\n              @Attribute('decimal') decimal: string,\n              @Attribute('thousand') thousand: string) {\n    if (decimal) {\n      this.decimal = decimal;\n    }\n    if (thousand) {\n      this.thousand = thousand;\n    }\n  }\n\n  /**\n   * Listener changeValue\n   * @param event\n   */\n  changeValue(event: any) {\n    let value = event.target.value;\n    if (value == '') {\n      return;\n    }\n    value = value + '';\n    value = parseInt(value.replace(/[\\D]+/g, ''));\n    value = value + '';\n    value = value.replace(/([0-9]{2})$/g, this.decimal + '$1');\n    var parts = value.toString().split(this.decimal);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousand);\n    value = parts.join(this.decimal);\n    console.log(value);\n    event.target.value = value;\n    this.model.update.emit(value);\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {CurrencyMaskDirective} from \"./ionic-currency-mask.directive\";\n\n\n\n@NgModule({\n  declarations: [CurrencyMaskDirective],\n  imports: [\n  ],\n  exports: [CurrencyMaskDirective]\n})\nexport class IonicCurrencyMaskModule { }\n","/*\n * Public API Surface of ionic-currency-mask\n */\n\nexport * from './lib/ionic-currency-mask.directive';\nexport * from './lib/ionic-currency-mask.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAWa,qBAAqB;;;;;IAgBhC,YAAmB,KAAc,EACC,OAAe,EACd,QAAgB;QAFhC,UAAK,GAAL,KAAK,CAAS;;;;QAXjC,YAAO,GAAW,GAAG,CAAC;;;;QAKtB,aAAQ,GAAW,GAAG,CAAC;QASrB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;QACD,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;KACF;;;;;IAMD,WAAW,CAAC,KAAU;QACpB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,KAAK,IAAI,EAAE,EAAE;YACf,OAAO;SACR;QACD,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;QACnB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9C,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;QACnB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC3D,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpE,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACb;;;YAvDF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,IAAI,EAAE;oBACJ,SAAS,EAAE,qBAAqB;oBAChC,aAAa,EAAE,qBAAqB;iBACrC;gBACD,SAAS,EAAE,CAAC,OAAO,CAAC;aACrB;;;YATO,OAAO;yCA2BA,SAAS,SAAC,SAAS;yCACnB,SAAS,SAAC,UAAU;;;MClBtB,uBAAuB;;;YANnC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,EACR;gBACD,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;ACVD;;;;ACAA;;;;;;"}